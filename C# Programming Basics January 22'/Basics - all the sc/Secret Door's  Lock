using System;

namespace Secret_Door_s_Lock_vol._2
{
    class Program
    {
        static void Main(string[] args)
        {
            //В града има тайна врата, за която всички знаят, но никой не е успявал да я отключи и да види какво има зад нея. За да бъде отключена трябва да се въведе трицифрен код.
            //Напишете програма, която генерира комбинации спрямо въведени числа – предположения от потребителя.От конзолата се въвеждат три цифри. Тези цифри ще бъдат горната граница, до която ние искаме да получим всички трицифрени числа, на които всяка една цифра отговаря на следните условия:

            //Вход
            //От конзолата се четат 3 реда:
            //•	Горната граница на стотиците -цяло число в диапазона(1 - 9)
            //•	Горната граница на десетиците -цяло число в диапазона(1 - 9)
            //•	Горната граница на единиците -цяло число в диапазона(1 - 9)
            //Изход
            //Да се отпечатат на конзолата всички трицифрени числа, за които всяка една част отговаря на условията по - горе.

            //inputs
            int hundreds = int.Parse(Console.ReadLine()); // стотици 
            int tens = int.Parse(Console.ReadLine()); //десетици
            int singles = int.Parse(Console.ReadLine()); //единици

            //•	Цифрата на единиците и цифрата на стотиците трябва да бъде четна
            //•	Цифрата на десетиците да бъде просто число в диапазона(2...7).

            for (int i = 2; i <= hundreds; i++)
            {
                if ( i % 2 == 0)
                {
                    for (int j = 2; j <= tens; j++)
                    {
                        if(j ==2 || j == 3 || j ==5 || j == 7)
                        {
                            for (int k = 2; k <= singles; k++)
                            {
                                if (k % 2 == 0)
                                {
                                    Console.WriteLine($"{i} {j} {k}");
                                }
                                else
                                {
                                    continue;
                                }
                            }
                        }
                        else
                        {
                            continue;
                        }
                    }

                }
                else
                {
                    continue;
                }
            }
        }
    }
}
